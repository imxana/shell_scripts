#!/bin/bash

# number
# 可以用 -eq、 -ne、-lt、 -le、 -gt 或 -ge 比较算术值，它们分别表示等于、不等于、小于、小于等于、大于、大于等于。

# string
# 可以分别用操作符 =、 !=、< 和 > 比较字符串是否相等、不相等或者第一个字符串的排序在第二个字符串的前面或后面。单目操作符 -z 测试 null 字符串，如果字符串非空 -n 返回 True（或者根本没有操作符

#比如比较字符串、判断文件是否存在及是否可读等，通常用"[]"来表示条件测试。

#注意：这里的空格很重要。要确保方括号的空格。笔者就曾因为空格缺少或位置不对，而浪费好多宝贵的时间。
#
#if ....; then
#    ....
#elif ....; then
#    ....
#else
#    ....
#fi
#[ -f "somefile" ] ：判断是否是一个文件
#[ -x "/bin/ls" ] ：判断/bin/ls是否存在并有可执行权限
#[ -n "$var" ] ：判断$var变量是否有值
#[ "$a" = "$b" ] ：判断$a和$b是否相等
#-r file　　　　　用户可读为真
#-w file　　　　　用户可写为真
#-x file　　　　　用户可执行为真
#-f file　　　　　文件为正规文件为真
#-d file　　　　　文件为目录为真
#-c file　　　　　文件为字符特殊文件为真
#-b file　　　　　文件为块特殊文件为真
#-s file　　　　　文件大小非0时为真
#-t file　　　　　当文件描述符(默认为1)指定的设备为终端时为真
#含条件选择的shell脚本 对于不含变量的任务简单shell脚本一般能胜任。但在执行一些决策任务时，就需要包含if/then的条件判断了。shell脚本编程支持此类运算，包括比较运算、判断文件是否存在等。
#基本的if条件命令选项有： - eq —比较两个参数是否相等（例如，if [ 2 –eq 5 ]）
#-ne —比较两个参数是否不相等
#-lt —参数1是否小于参数2
#-le —参数1是否小于等于参数2
#-gt —参数1是否大于参数2
#-ge —参数1是否大于等于参数2
#-f — 检查某文件是否存在（例如，if [ -f "filename" ]）
#-d — 检查目录是否存在
#几乎所有的判断都可以用这些比较运算符实现。脚本中常用-f命令选项在执行某一文件之前检查它是否存在。



var=12345678901234567890
echo ${#var}


